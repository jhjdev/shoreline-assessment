{
  "version": 3,
  "sources": ["../../use-between/release/index.esm.js"],
  "sourcesContent": ["import * as React from 'react';\nimport { useReducer, useEffect, useRef } from 'react';\n\nconst ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\r\nconst ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n\nconst useForceUpdate = () => useReducer(() => ({}))[1];\n\nconst notImplemented = (name) => () => {\r\n    const msg = `Hook \"${name}\" no possible to using inside useBetween scope.`;\r\n    console.error(msg);\r\n    throw new Error(msg);\r\n};\r\nconst equals = (a, b) => Object.is(a, b);\r\nconst shouldUpdate = (a, b) => ((!a || !b) ||\r\n    (a.length !== b.length) ||\r\n    a.some((dep, index) => !equals(dep, b[index])));\r\nconst detectServer = () => typeof window === 'undefined';\r\nconst instances = new Map();\r\nlet boxes = [];\r\nlet pointer = 0;\r\nlet useEffectQueue = [];\r\nlet useLayoutEffectQueue = [];\r\nlet nextTick = () => { };\r\nlet isServer = detectServer();\r\nlet initialData = undefined;\r\nconst nextBox = () => {\r\n    const index = pointer++;\r\n    return (boxes[index] = boxes[index] || {});\r\n};\r\nconst ownDisptacher = {\r\n    useState(initialState) {\r\n        const box = nextBox();\r\n        const tick = nextTick;\r\n        if (!box.initialized) {\r\n            box.state = typeof initialState === \"function\" ? initialState() : initialState;\r\n            box.set = (fn) => {\r\n                if (typeof fn === 'function') {\r\n                    return box.set(fn(box.state));\r\n                }\r\n                if (!equals(fn, box.state)) {\r\n                    box.state = fn;\r\n                    tick();\r\n                }\r\n            };\r\n            box.initialized = true;\r\n        }\r\n        return [box.state, box.set];\r\n    },\r\n    useReducer(reducer, initialState, init) {\r\n        const box = nextBox();\r\n        const tick = nextTick;\r\n        if (!box.initialized) {\r\n            box.state = init ? init(initialState) : initialState;\r\n            box.dispatch = (action) => {\r\n                const state = reducer(box.state, action);\r\n                if (!equals(state, box.state)) {\r\n                    box.state = state;\r\n                    tick();\r\n                }\r\n            };\r\n            box.initialized = true;\r\n        }\r\n        return [box.state, box.dispatch];\r\n    },\r\n    useEffect(fn, deps) {\r\n        if (isServer)\r\n            return;\r\n        const box = nextBox();\r\n        if (!box.initialized) {\r\n            box.deps = deps;\r\n            box.initialized = true;\r\n            useEffectQueue.push([box, deps, fn]);\r\n        }\r\n        else if (shouldUpdate(box.deps, deps)) {\r\n            box.deps = deps;\r\n            useEffectQueue.push([box, deps, fn]);\r\n        }\r\n    },\r\n    useLayoutEffect(fn, deps) {\r\n        if (isServer)\r\n            return;\r\n        const box = nextBox();\r\n        if (!box.initialized) {\r\n            box.deps = deps;\r\n            box.initialized = true;\r\n            useLayoutEffectQueue.push([box, deps, fn]);\r\n        }\r\n        else if (shouldUpdate(box.deps, deps)) {\r\n            box.deps = deps;\r\n            useLayoutEffectQueue.push([box, deps, fn]);\r\n        }\r\n    },\r\n    useCallback(fn, deps) {\r\n        const box = nextBox();\r\n        if (!box.initialized) {\r\n            box.fn = fn;\r\n            box.deps = deps;\r\n            box.initialized = true;\r\n        }\r\n        else if (shouldUpdate(box.deps, deps)) {\r\n            box.deps = deps;\r\n            box.fn = fn;\r\n        }\r\n        return box.fn;\r\n    },\r\n    useMemo(fn, deps) {\r\n        const box = nextBox();\r\n        if (!box.initialized) {\r\n            box.deps = deps;\r\n            box.state = fn();\r\n            box.initialized = true;\r\n        }\r\n        else if (shouldUpdate(box.deps, deps)) {\r\n            box.deps = deps;\r\n            box.state = fn();\r\n        }\r\n        return box.state;\r\n    },\r\n    useRef(initialValue) {\r\n        const box = nextBox();\r\n        if (!box.initialized) {\r\n            box.state = { current: initialValue };\r\n            box.initialized = true;\r\n        }\r\n        return box.state;\r\n    },\r\n    useImperativeHandle(ref, fn, deps) {\r\n        if (isServer)\r\n            return;\r\n        const box = nextBox();\r\n        if (!box.initialized) {\r\n            box.deps = deps;\r\n            box.initialized = true;\r\n            useLayoutEffectQueue.push([box, deps, () => {\r\n                    typeof ref === 'function' ? ref(fn()) : ref.current = fn();\r\n                }]);\r\n        }\r\n        else if (shouldUpdate(box.deps, deps)) {\r\n            box.deps = deps;\r\n            useLayoutEffectQueue.push([box, deps, () => {\r\n                    typeof ref === 'function' ? ref(fn()) : ref.current = fn();\r\n                }]);\r\n        }\r\n    }\r\n};\r\n[\r\n    'readContext',\r\n    'useContext',\r\n    'useDebugValue',\r\n    'useResponder',\r\n    'useDeferredValue',\r\n    'useTransition'\r\n].forEach(key => ownDisptacher[key] = notImplemented(key));\r\nconst factory = (hook, options) => {\r\n    const scopedBoxes = [];\r\n    let syncs = [];\r\n    let state = undefined;\r\n    let unsubs = [];\r\n    let mocked = false;\r\n    if (options && options.mock) {\r\n        state = options.mock;\r\n        mocked = true;\r\n    }\r\n    const sync = () => {\r\n        syncs.slice().forEach(fn => fn());\r\n    };\r\n    const tick = () => {\r\n        if (mocked)\r\n            return;\r\n        const originDispatcher = ReactCurrentDispatcher.current;\r\n        const originState = [\r\n            pointer,\r\n            useEffectQueue,\r\n            useLayoutEffectQueue,\r\n            boxes,\r\n            nextTick\r\n        ];\r\n        let tickAgain = false;\r\n        let tickBody = true;\r\n        pointer = 0;\r\n        useEffectQueue = [];\r\n        useLayoutEffectQueue = [];\r\n        boxes = scopedBoxes;\r\n        nextTick = () => {\r\n            if (tickBody) {\r\n                tickAgain = true;\r\n            }\r\n            else {\r\n                tick();\r\n            }\r\n        };\r\n        ReactCurrentDispatcher.current = ownDisptacher;\r\n        state = hook(initialData);\r\n        [useLayoutEffectQueue, useEffectQueue].forEach(queue => (queue.forEach(([box, deps, fn]) => {\r\n            box.deps = deps;\r\n            if (box.unsub) {\r\n                const unsub = box.unsub;\r\n                unsubs = unsubs.filter(fn => fn !== unsub);\r\n                unsub();\r\n            }\r\n            const unsub = fn();\r\n            if (typeof unsub === \"function\") {\r\n                unsubs.push(unsub);\r\n                box.unsub = unsub;\r\n            }\r\n            else {\r\n                box.unsub = null;\r\n            }\r\n        })));\r\n        [\r\n            pointer,\r\n            useEffectQueue,\r\n            useLayoutEffectQueue,\r\n            boxes,\r\n            nextTick\r\n        ] = originState;\r\n        ReactCurrentDispatcher.current = originDispatcher;\r\n        tickBody = false;\r\n        if (!tickAgain) {\r\n            sync();\r\n            return;\r\n        }\r\n        tick();\r\n    };\r\n    const sub = (fn) => {\r\n        if (syncs.indexOf(fn) === -1) {\r\n            syncs.push(fn);\r\n        }\r\n    };\r\n    const unsub = (fn) => {\r\n        syncs = syncs.filter(f => f !== fn);\r\n    };\r\n    const mock = (obj) => {\r\n        mocked = true;\r\n        state = obj;\r\n        sync();\r\n    };\r\n    const unmock = () => {\r\n        mocked = false;\r\n        tick();\r\n    };\r\n    return {\r\n        init: () => tick(),\r\n        get: () => state,\r\n        sub,\r\n        unsub,\r\n        unsubs: () => unsubs,\r\n        mock,\r\n        unmock\r\n    };\r\n};\r\nconst getInstance = (hook) => {\r\n    let inst = instances.get(hook);\r\n    if (!inst) {\r\n        inst = factory(hook);\r\n        instances.set(hook, inst);\r\n        inst.init();\r\n    }\r\n    return inst;\r\n};\r\nconst useBetween = (hook) => {\r\n    const forceUpdate = useForceUpdate();\r\n    let inst = getInstance(hook);\r\n    inst.sub(forceUpdate);\r\n    useEffect(() => (inst.sub(forceUpdate), () => inst.unsub(forceUpdate)), [inst, forceUpdate]);\r\n    return inst.get();\r\n};\r\nconst useInitial = (data, server) => {\r\n    const ref = useRef();\r\n    if (!ref.current) {\r\n        isServer = typeof server === 'undefined' ? detectServer() : server;\r\n        isServer && clear();\r\n        initialData = data;\r\n        ref.current = 1;\r\n    }\r\n};\r\nconst mock = (hook, state) => {\r\n    let inst = instances.get(hook);\r\n    if (inst)\r\n        inst.mock(state);\r\n    else {\r\n        inst = factory(hook, { mock: state });\r\n        instances.set(hook, inst);\r\n    }\r\n    return inst.unmock;\r\n};\r\nconst get = (hook) => getInstance(hook).get();\r\nconst free = function (...hooks) {\r\n    if (!hooks.length) {\r\n        hooks = [];\r\n        instances.forEach((_instance, hook) => hooks.push(hook));\r\n    }\r\n    let inst;\r\n    hooks.forEach((hook) => ((inst = instances.get(hook)) &&\r\n        inst.unsubs().slice().forEach((fn) => fn())));\r\n    hooks.forEach((hook) => instances.delete(hook));\r\n};\r\nconst clear = () => instances.clear();\r\nconst on = (hook, fn) => {\r\n    const inst = getInstance(hook);\r\n    const listener = () => fn(inst.get());\r\n    inst.sub(listener);\r\n    return () => inst.unsub(listener);\r\n};\n\nexport { clear, free, get, mock, on, useBetween, useInitial };\n"],
  "mappings": ";;;;;;AAAA,YAAuB;AACvB,mBAA8C;AAE9C,IAAM,uBAA6B;AACnC,IAAM,yBAAyB,qBAAqB;AAEpD,IAAM,iBAAiB,UAAM,yBAAW,OAAO,CAAC,EAAE,EAAE,CAAC;AAErD,IAAM,iBAAiB,CAAC,SAAS,MAAM;AACnC,QAAM,MAAM,SAAS;AACrB,UAAQ,MAAM,GAAG;AACjB,QAAM,IAAI,MAAM,GAAG;AACvB;AACA,IAAM,SAAS,CAAC,GAAG,MAAM,OAAO,GAAG,GAAG,CAAC;AACvC,IAAM,eAAe,CAAC,GAAG,MAAQ,CAAC,KAAK,CAAC,KACnC,EAAE,WAAW,EAAE,UAChB,EAAE,KAAK,CAAC,KAAK,UAAU,CAAC,OAAO,KAAK,EAAE,KAAK,CAAC,CAAC;AACjD,IAAM,eAAe,MAAM,OAAO,WAAW;AAC7C,IAAM,YAAY,oBAAI,IAAI;AAC1B,IAAI,QAAQ,CAAC;AACb,IAAI,UAAU;AACd,IAAI,iBAAiB,CAAC;AACtB,IAAI,uBAAuB,CAAC;AAC5B,IAAI,WAAW,MAAM;AAAE;AACvB,IAAI,WAAW,aAAa;AAC5B,IAAI,cAAc;AAClB,IAAM,UAAU,MAAM;AAClB,QAAM,QAAQ;AACd,SAAQ,MAAM,KAAK,IAAI,MAAM,KAAK,KAAK,CAAC;AAC5C;AACA,IAAM,gBAAgB;AAAA,EAClB,SAAS,cAAc;AACnB,UAAM,MAAM,QAAQ;AACpB,UAAM,OAAO;AACb,QAAI,CAAC,IAAI,aAAa;AAClB,UAAI,QAAQ,OAAO,iBAAiB,aAAa,aAAa,IAAI;AAClE,UAAI,MAAM,CAAC,OAAO;AACd,YAAI,OAAO,OAAO,YAAY;AAC1B,iBAAO,IAAI,IAAI,GAAG,IAAI,KAAK,CAAC;AAAA,QAChC;AACA,YAAI,CAAC,OAAO,IAAI,IAAI,KAAK,GAAG;AACxB,cAAI,QAAQ;AACZ,eAAK;AAAA,QACT;AAAA,MACJ;AACA,UAAI,cAAc;AAAA,IACtB;AACA,WAAO,CAAC,IAAI,OAAO,IAAI,GAAG;AAAA,EAC9B;AAAA,EACA,WAAW,SAAS,cAAc,MAAM;AACpC,UAAM,MAAM,QAAQ;AACpB,UAAM,OAAO;AACb,QAAI,CAAC,IAAI,aAAa;AAClB,UAAI,QAAQ,OAAO,KAAK,YAAY,IAAI;AACxC,UAAI,WAAW,CAAC,WAAW;AACvB,cAAM,QAAQ,QAAQ,IAAI,OAAO,MAAM;AACvC,YAAI,CAAC,OAAO,OAAO,IAAI,KAAK,GAAG;AAC3B,cAAI,QAAQ;AACZ,eAAK;AAAA,QACT;AAAA,MACJ;AACA,UAAI,cAAc;AAAA,IACtB;AACA,WAAO,CAAC,IAAI,OAAO,IAAI,QAAQ;AAAA,EACnC;AAAA,EACA,UAAU,IAAI,MAAM;AAChB,QAAI;AACA;AACJ,UAAM,MAAM,QAAQ;AACpB,QAAI,CAAC,IAAI,aAAa;AAClB,UAAI,OAAO;AACX,UAAI,cAAc;AAClB,qBAAe,KAAK,CAAC,KAAK,MAAM,EAAE,CAAC;AAAA,IACvC,WACS,aAAa,IAAI,MAAM,IAAI,GAAG;AACnC,UAAI,OAAO;AACX,qBAAe,KAAK,CAAC,KAAK,MAAM,EAAE,CAAC;AAAA,IACvC;AAAA,EACJ;AAAA,EACA,gBAAgB,IAAI,MAAM;AACtB,QAAI;AACA;AACJ,UAAM,MAAM,QAAQ;AACpB,QAAI,CAAC,IAAI,aAAa;AAClB,UAAI,OAAO;AACX,UAAI,cAAc;AAClB,2BAAqB,KAAK,CAAC,KAAK,MAAM,EAAE,CAAC;AAAA,IAC7C,WACS,aAAa,IAAI,MAAM,IAAI,GAAG;AACnC,UAAI,OAAO;AACX,2BAAqB,KAAK,CAAC,KAAK,MAAM,EAAE,CAAC;AAAA,IAC7C;AAAA,EACJ;AAAA,EACA,YAAY,IAAI,MAAM;AAClB,UAAM,MAAM,QAAQ;AACpB,QAAI,CAAC,IAAI,aAAa;AAClB,UAAI,KAAK;AACT,UAAI,OAAO;AACX,UAAI,cAAc;AAAA,IACtB,WACS,aAAa,IAAI,MAAM,IAAI,GAAG;AACnC,UAAI,OAAO;AACX,UAAI,KAAK;AAAA,IACb;AACA,WAAO,IAAI;AAAA,EACf;AAAA,EACA,QAAQ,IAAI,MAAM;AACd,UAAM,MAAM,QAAQ;AACpB,QAAI,CAAC,IAAI,aAAa;AAClB,UAAI,OAAO;AACX,UAAI,QAAQ,GAAG;AACf,UAAI,cAAc;AAAA,IACtB,WACS,aAAa,IAAI,MAAM,IAAI,GAAG;AACnC,UAAI,OAAO;AACX,UAAI,QAAQ,GAAG;AAAA,IACnB;AACA,WAAO,IAAI;AAAA,EACf;AAAA,EACA,OAAO,cAAc;AACjB,UAAM,MAAM,QAAQ;AACpB,QAAI,CAAC,IAAI,aAAa;AAClB,UAAI,QAAQ,EAAE,SAAS,aAAa;AACpC,UAAI,cAAc;AAAA,IACtB;AACA,WAAO,IAAI;AAAA,EACf;AAAA,EACA,oBAAoB,KAAK,IAAI,MAAM;AAC/B,QAAI;AACA;AACJ,UAAM,MAAM,QAAQ;AACpB,QAAI,CAAC,IAAI,aAAa;AAClB,UAAI,OAAO;AACX,UAAI,cAAc;AAClB,2BAAqB,KAAK,CAAC,KAAK,MAAM,MAAM;AACpC,eAAO,QAAQ,aAAa,IAAI,GAAG,CAAC,IAAI,IAAI,UAAU,GAAG;AAAA,MAC7D,CAAC,CAAC;AAAA,IACV,WACS,aAAa,IAAI,MAAM,IAAI,GAAG;AACnC,UAAI,OAAO;AACX,2BAAqB,KAAK,CAAC,KAAK,MAAM,MAAM;AACpC,eAAO,QAAQ,aAAa,IAAI,GAAG,CAAC,IAAI,IAAI,UAAU,GAAG;AAAA,MAC7D,CAAC,CAAC;AAAA,IACV;AAAA,EACJ;AACJ;AACA;AAAA,EACI;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ,EAAE,QAAQ,SAAO,cAAc,GAAG,IAAI,eAAe,GAAG,CAAC;AACzD,IAAM,UAAU,CAAC,MAAM,YAAY;AAC/B,QAAM,cAAc,CAAC;AACrB,MAAI,QAAQ,CAAC;AACb,MAAI,QAAQ;AACZ,MAAI,SAAS,CAAC;AACd,MAAI,SAAS;AACb,MAAI,WAAW,QAAQ,MAAM;AACzB,YAAQ,QAAQ;AAChB,aAAS;AAAA,EACb;AACA,QAAM,OAAO,MAAM;AACf,UAAM,MAAM,EAAE,QAAQ,QAAM,GAAG,CAAC;AAAA,EACpC;AACA,QAAM,OAAO,MAAM;AACf,QAAI;AACA;AACJ,UAAM,mBAAmB,uBAAuB;AAChD,UAAM,cAAc;AAAA,MAChB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AACA,QAAI,YAAY;AAChB,QAAI,WAAW;AACf,cAAU;AACV,qBAAiB,CAAC;AAClB,2BAAuB,CAAC;AACxB,YAAQ;AACR,eAAW,MAAM;AACb,UAAI,UAAU;AACV,oBAAY;AAAA,MAChB,OACK;AACD,aAAK;AAAA,MACT;AAAA,IACJ;AACA,2BAAuB,UAAU;AACjC,YAAQ,KAAK,WAAW;AACxB,KAAC,sBAAsB,cAAc,EAAE,QAAQ,WAAU,MAAM,QAAQ,CAAC,CAAC,KAAK,MAAM,EAAE,MAAM;AACxF,UAAI,OAAO;AACX,UAAI,IAAI,OAAO;AACX,cAAMA,SAAQ,IAAI;AAClB,iBAAS,OAAO,OAAO,CAAAC,QAAMA,QAAOD,MAAK;AACzC,QAAAA,OAAM;AAAA,MACV;AACA,YAAMA,SAAQ,GAAG;AACjB,UAAI,OAAOA,WAAU,YAAY;AAC7B,eAAO,KAAKA,MAAK;AACjB,YAAI,QAAQA;AAAA,MAChB,OACK;AACD,YAAI,QAAQ;AAAA,MAChB;AAAA,IACJ,CAAC,CAAE;AACH;AAAA,MACI;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ,IAAI;AACJ,2BAAuB,UAAU;AACjC,eAAW;AACX,QAAI,CAAC,WAAW;AACZ,WAAK;AACL;AAAA,IACJ;AACA,SAAK;AAAA,EACT;AACA,QAAM,MAAM,CAAC,OAAO;AAChB,QAAI,MAAM,QAAQ,EAAE,MAAM,IAAI;AAC1B,YAAM,KAAK,EAAE;AAAA,IACjB;AAAA,EACJ;AACA,QAAM,QAAQ,CAAC,OAAO;AAClB,YAAQ,MAAM,OAAO,OAAK,MAAM,EAAE;AAAA,EACtC;AACA,QAAME,QAAO,CAAC,QAAQ;AAClB,aAAS;AACT,YAAQ;AACR,SAAK;AAAA,EACT;AACA,QAAM,SAAS,MAAM;AACjB,aAAS;AACT,SAAK;AAAA,EACT;AACA,SAAO;AAAA,IACH,MAAM,MAAM,KAAK;AAAA,IACjB,KAAK,MAAM;AAAA,IACX;AAAA,IACA;AAAA,IACA,QAAQ,MAAM;AAAA,IACd,MAAAA;AAAA,IACA;AAAA,EACJ;AACJ;AACA,IAAM,cAAc,CAAC,SAAS;AAC1B,MAAI,OAAO,UAAU,IAAI,IAAI;AAC7B,MAAI,CAAC,MAAM;AACP,WAAO,QAAQ,IAAI;AACnB,cAAU,IAAI,MAAM,IAAI;AACxB,SAAK,KAAK;AAAA,EACd;AACA,SAAO;AACX;AACA,IAAM,aAAa,CAAC,SAAS;AACzB,QAAM,cAAc,eAAe;AACnC,MAAI,OAAO,YAAY,IAAI;AAC3B,OAAK,IAAI,WAAW;AACpB,8BAAU,OAAO,KAAK,IAAI,WAAW,GAAG,MAAM,KAAK,MAAM,WAAW,IAAI,CAAC,MAAM,WAAW,CAAC;AAC3F,SAAO,KAAK,IAAI;AACpB;AACA,IAAM,aAAa,CAAC,MAAM,WAAW;AACjC,QAAM,UAAM,qBAAO;AACnB,MAAI,CAAC,IAAI,SAAS;AACd,eAAW,OAAO,WAAW,cAAc,aAAa,IAAI;AAC5D,gBAAY,MAAM;AAClB,kBAAc;AACd,QAAI,UAAU;AAAA,EAClB;AACJ;AACA,IAAM,OAAO,CAAC,MAAM,UAAU;AAC1B,MAAI,OAAO,UAAU,IAAI,IAAI;AAC7B,MAAI;AACA,SAAK,KAAK,KAAK;AAAA,OACd;AACD,WAAO,QAAQ,MAAM,EAAE,MAAM,MAAM,CAAC;AACpC,cAAU,IAAI,MAAM,IAAI;AAAA,EAC5B;AACA,SAAO,KAAK;AAChB;AACA,IAAM,MAAM,CAAC,SAAS,YAAY,IAAI,EAAE,IAAI;AAC5C,IAAM,OAAO,YAAa,OAAO;AAC7B,MAAI,CAAC,MAAM,QAAQ;AACf,YAAQ,CAAC;AACT,cAAU,QAAQ,CAAC,WAAW,SAAS,MAAM,KAAK,IAAI,CAAC;AAAA,EAC3D;AACA,MAAI;AACJ,QAAM,QAAQ,CAAC,UAAW,OAAO,UAAU,IAAI,IAAI,MAC/C,KAAK,OAAO,EAAE,MAAM,EAAE,QAAQ,CAAC,OAAO,GAAG,CAAC,CAAE;AAChD,QAAM,QAAQ,CAAC,SAAS,UAAU,OAAO,IAAI,CAAC;AAClD;AACA,IAAM,QAAQ,MAAM,UAAU,MAAM;AACpC,IAAM,KAAK,CAAC,MAAM,OAAO;AACrB,QAAM,OAAO,YAAY,IAAI;AAC7B,QAAM,WAAW,MAAM,GAAG,KAAK,IAAI,CAAC;AACpC,OAAK,IAAI,QAAQ;AACjB,SAAO,MAAM,KAAK,MAAM,QAAQ;AACpC;",
  "names": ["unsub", "fn", "mock"]
}
